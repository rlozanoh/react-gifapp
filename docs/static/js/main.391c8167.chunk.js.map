{"version":3,"sources":["components/AddCategory.js","components/GiftGridItem.js","helpers/getGifts.js","components/GiftGrid.js","hooks/useFetchGifs.js","GifExpertApp.js","index.js"],"names":["AddCategory","setCategories","useState","inputValue","setInputValue","onSubmit","e","preventDefault","trim","length","type","value","onChange","target","GiftGridItem","id","title","url","className","src","alt","getGifts","category","a","encodeURI","fetch","resp","json","data","gifs","map","img","images","downsized_medium","GiftGrid","loading","state","setstate","useEffect","then","useFetchGifs","key","GifExpertApp","categories","ReactDOM","render","document","getElementById"],"mappings":"+MAGe,SAASA,EAAT,GAA2C,IAAnBC,EAAkB,EAAlBA,cAAkB,EAEjBC,mBAAS,IAFQ,mBAE9CC,EAF8C,KAElCC,EAFkC,KAerD,OACI,0BAAMC,SAZW,SAAEC,GACnBA,EAAEC,iBAEGJ,EAAWK,OAAOC,OAAS,IAE5BR,GAAc,SAAAK,GAAC,OAAMH,GAAN,mBAAqBG,OACpCF,EAAc,OAOd,2BACIM,KAAM,OACNC,MAASR,EACTS,SAjBc,SAAEN,GAAF,OAAUF,EAAeE,EAAEO,OAAOF,WCJzD,IAAMG,EAAe,SAAC,GAAuB,EAArBC,GAAsB,IAAlBC,EAAiB,EAAjBA,MAAOC,EAAU,EAAVA,IACtC,OACI,yBAAKC,UAAU,0CACX,yBAAKC,IAAMF,EAAMG,IAAMJ,M,uBCJlBK,EAAQ,uCAAG,WAAOC,GAAP,uBAAAC,EAAA,4DAEL,mCACTN,EAHc,iDAGkCO,UAAUF,GAH5C,6BAEL,oCAFK,SAIDG,MAAOR,GAJN,cAIdS,EAJc,gBAKGA,EAAKC,OALR,uBAKZC,EALY,EAKZA,KACFC,EAAOD,EAAKE,KAAI,SAAAC,GAAQ,IAAD,EACzB,MAAM,CACFhB,GAAIgB,EAAIhB,GACRC,MAAOe,EAAIf,MACXC,IAAG,UAAEc,EAAIC,cAAN,aAAE,EAAYC,iBAAiBhB,QAVtB,kBAabY,GAba,4CAAH,sDCGXK,EAAW,SAAC,GAAkB,IAAhBZ,EAAe,EAAfA,SAAe,ECDf,SAAEA,GAAe,IAAD,EACdpB,mBAAS,CAC/B0B,KAAM,GACNO,SAAS,IAH2B,mBACjCC,EADiC,KAC1BC,EAD0B,KAexC,OARAC,qBAAU,WACNjB,EAAUC,GAAWiB,MAAK,SAAAR,GACtBM,EAAS,CACLT,KAAMG,EACNI,SAAS,SAGlB,CAAEb,IACEc,EDZ0BI,CAAclB,GAAlCU,EAF0B,EAE/BJ,KAAaO,EAFkB,EAElBA,QAEpB,OACG,oCACC,gCAAOb,EAAP,KACCa,GAAW,4CACZ,yBAAKjB,UAAU,YAERc,EAAOF,KAAK,SAAAC,GAAG,OACX,kBAAC,EAAD,eACIU,IAAOV,EAAIhB,IACPgB,UESbW,EAtBM,WAAQ,IAAD,EAEYxC,mBAAS,CAAC,eAFtB,mBAEjByC,EAFiB,KAEL1C,EAFK,KAIxB,OACI,oCACE,4CACA,kBAACD,EAAD,CAAaC,cAAeA,IAC5B,6BACC,4BAEK0C,EAAWb,KAAI,SAAAR,GAAQ,OACnB,kBAAC,EAAD,CAAUmB,IAAMnB,EACZA,SAAYA,UCVpCsB,IAASC,OACL,kBAAC,EAAD,MACFC,SAASC,eAAe,U","file":"static/js/main.391c8167.chunk.js","sourcesContent":["import React, { useState } from 'react'\nimport PropTypes from \"prop-types\";\n\nexport default function AddCategory( { setCategories } ) {\n\n    const [inputValue, setInputValue] = useState('')\n    const handleInputChange = ( e )  => setInputValue( e.target.value)\n    const handleSumbit = ( e ) => {\n        e.preventDefault();\n\n        if ( inputValue.trim().length > 2 ) {\n\n            setCategories(e => [ inputValue, ...e])\n            setInputValue('')\n        }\n    }\n    \n \n    return (\n        <form onSubmit= { handleSumbit }>\n            <input \n                type =\"text\"\n                value = {inputValue}\n                onChange={ handleInputChange}\n\n            />  \n        </form>\n    )\n}\n\nAddCategory.propTypes = {\n    setCategories: PropTypes.func.isRequired,\n}\n","import React from 'react'\n\nexport const GiftGridItem = ( {id, title, url} ) => {\n    return (\n        <div className=\"card animate__animated animate__fadeIn\">\n            <img src={ url } alt={ title } />\n            {/* <p> { title } </p> */}\n        </div>\n    )\n}\n","\n    export const getGifts = async( category ) => {\n\n        const apiKey = 'aN5DI7B3FMzARjlIVes2h54mS0iYXyXo';\n        const url= `https://api.giphy.com/v1/gifs/search?q=${ encodeURI(category) }&limit=10&api_key=${apiKey}`;\n        const resp = await fetch( url );\n        const { data } = await resp.json();\n        const gifs = data.map(img => {\n            return{\n                id: img.id,\n                title: img.title,\n                url: img.images?.downsized_medium.url\n            }\n        }) \n        return gifs;\n    }\n\n"," import React from 'react'\n import { GiftGridItem } from './GiftGridItem'\nimport { useFetchGifs } from '../hooks/useFetchGifs';\n \n export const GiftGrid = ({ category }) => {\n\n    const { data:images, loading } = useFetchGifs( category );  \n\n     return (\n        <>\n         <h3> { category } </h3>\n         {loading && <p> Loaging.... </p>}\n         <div className=\"cardGrid\">\n            {\n                images.map( img => (\n                    <GiftGridItem \n                        key= { img.id }\n                        {...img}\n                    />\n                ))\n            }\n         </div>\n        </>\n     )\n }","import { useState, useEffect} from 'react'\nimport { getGifts } from '../helpers/getGifts'\n\nexport const useFetchGifs = ( category ) => {\n    const [state, setstate] = useState({\n        data: [],\n        loading: true\n    })\n\n\n    useEffect(() => {\n        getGifts( category ).then(img => { \n            setstate({\n                data: img,\n                loading: false\n            })\n        });\n    }, [ category ])\n    return state; \n}","import React, { useState  } from 'react'\nimport AddCategory from './components/AddCategory'\nimport { GiftGrid } from './components/GiftGrid'\n\nconst GifExpertApp = ( ) => {\n\n    const [categories, setCategories] = useState(['God Of War'])\n    \n    return (\n        <>\n          <h2>GifExpertApp</h2>\n          <AddCategory setCategories={setCategories}/>\n          <hr />\n           <ol>\n            {\n                categories.map(category =>( \n                    <GiftGrid key={ category }\n                        category= { category } \n                    /> \n                ))\n            }    \n           </ol>\n        </>\n    )\n}\n\nexport default GifExpertApp;","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport GifExpertApp from './GifExpertApp'\n\n\n\nReactDOM.render(\n    <GifExpertApp />,\n  document.getElementById('root')\n);\n"],"sourceRoot":""}